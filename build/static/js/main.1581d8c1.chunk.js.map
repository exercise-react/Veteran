{"version":3,"sources":["components/Header.js","components/SideNav.js","components/Main.js","theme.js","containers/App.js","serviceWorker.js","reducers/index.js","index.js","services/loadData.js"],"names":["Header","react_default","a","createElement","useStyles","makeStyles","theme","root","width","minWidth","maxWidth","lists","backgroundColor","palette","background","paper","marginTop","spacing","nested","paddingLeft","ListItemLink","props","to","uniqKey","primary","open","other","Object","objectWithoutProperties","key","ListItem_default","assign","component","className","ListItemText_default","ExpandLess_default","ExpandMore_default","SideNav","classes","_useState","useState","_useState2","slicedToArray","openNav","setNavOpen","handleClick","navigation","navigationMap","Array","isArray","length","childrenMapStructure","nodesChildren","List_default","id","url","title","onClick","subitems","map","children","Collapse_default","in","timeout","unmountOnExit","dense","RouterLink","aria-label","nodes","node","Home","lazy","__webpack_require__","e","then","bind","VeteranInformation","Promise","all","Main","react_router","react","fallback","exact","path","createMuiTheme","common","black","white","default","light","main","dark","contrastText","secondary","error","text","disabled","hint","typography","fontSize","fontWeight","browserHistory","createBrowserHistory","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loadDataAction","nextProps","nextState","nextContext","history","ThemeProvider","CssBaseline","components_Header","components_Main","React","Component","connect","dispatch","anyUrl","loadData","Boolean","window","location","hostname","match","InitialState","auth","selectClient","selectClientID","selectClientData","edit","backup","clientForm","clientData","addNewClient","descriptor","ID","CreateDate","FirstName","LastName","CityBirth","StateBirth","ServiceNumber","Branch","Rank","Discharge","Comments","middleware","thunk","store","createStore","arguments","undefined","action","type","objectSpread","payload","newId","reduce","acc","curr","Number","slice","toString","newClientData","client","filter","push","applyMiddleware","apply","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","fetch","response","status","json","data","console","warn","concat","catch","err","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.1581d8c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n    <header>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List/index';\r\nimport ListItem from '@material-ui/core/ListItem/index';\r\nimport Collapse from '@material-ui/core/Collapse/index';\r\nimport ListItemText from '@material-ui/core/ListItemText/index';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'typeface-roboto';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        minWidth: 300,\r\n        maxWidth: 300,\r\n    },\r\n\r\nlists: {\r\n    backgroundColor: theme.palette.background.paper,\r\n        marginTop: theme.spacing(1),\r\n},\r\n    nested: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\n function ListItemLink(props) {\r\n    const {to, uniqKey, primary, open, ...other} = props;\r\n\r\n    return (\r\n        <li key={uniqKey}>\r\n            <ListItem component='a'\r\n                      className='navLink'\r\n                      to={to}\r\n                      {...other}>\r\n                <ListItemText primary={primary}/>\r\n                {open != null ? open ? <ExpandLess/> : <ExpandMore/> : null}\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n    open: PropTypes.bool,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default function SideNav(props)  {\r\n    const classes = useStyles();\r\n\r\n    const [openNav, setNavOpen] = useState(true);\r\n\r\n\r\n  const  handleClick = () => {\r\n      setNavOpen(!openNav);\r\n    };\r\n\r\n\r\n        const {\r\n            navigation\r\n        } = props;\r\n\r\n        if (!navigation) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const navigationMap = Array.isArray(navigation)\r\n        && navigation.length > 0\r\n            ? navigation\r\n            : [];\r\n\r\n        function MapStructure(props) {\r\n            const nodes = props.navigationMap;\r\n            if (nodes) {\r\n                return nodes.map(node => {\r\n                    if ('subitems' in node\r\n                        && Array.isArray(node.subitems)\r\n                        && node.subitems.length > 0) return childrenMapStructure(node);\r\n                    return (\r\n\r\n                        <ListItem key={node.id}\r\n                                  component={RouterLink}\r\n                                  to={node.url}>\r\n                            <ListItemText\r\n                                primary={node.title}/>\r\n                        </ListItem>\r\n\r\n                    )\r\n                });\r\n            }\r\n        }\r\n\r\n        const childrenMapStructure = (nodesChildren) => (\r\n            <List key={nodesChildren.id}>\r\n                <ListItemLink to={nodesChildren.url}\r\n                              uniqKey={nodesChildren.id}\r\n                              primary={nodesChildren.title}\r\n                              open={openNav}\r\n                              onClick={handleClick}/>\r\n                {nodesChildren.subitems.map(children => (\r\n                    <Collapse component=\"li\"\r\n                              in={openNav}\r\n                              timeout=\"auto\" unmountOnExit\r\n                              key={children.id}\r\n                              className={classes.nested}>\r\n                        <List dense={true}>\r\n                            <ListItem component={RouterLink}\r\n                                      to={children.url}>\r\n                                <ListItemText primary={children.title}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>))}\r\n            </List>\r\n        );\r\n\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <nav className={classes.lists} aria-label=\"Mailbox folders\">\r\n                    <List>\r\n                        <MapStructure navigationMap={navigationMap}/>\r\n                    </List>\r\n                </nav>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\n","import React, {lazy, Suspense} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n\r\nconst Home = lazy(() => import('./Home'));\r\n\r\nconst VeteranInformation = lazy(() => import('../containers/VeteranInformation'));\r\n\r\nconst Main = () => (\r\n    <div className='main-container'>\r\n            <Switch>\r\n                <Suspense fallback={<div> ...Loading </div>}>\r\n                    <Route exact path='/clients/veteran-information' component={VeteranInformation}/>\r\n                    <Route exact path='/' component={Home}/>\r\n                </Suspense>\r\n            </Switch>\r\n    </div>\r\n);\r\n\r\nexport default Main;\r\n\r\n","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst customTheme = {\r\n    \"palette\": {\r\n        \"common\": {\"black\": \"#000\", \"white\": \"#fff\"},\r\n        \"background\": {\"paper\": \"#fff\", \"default\": \"white\"},\r\n        \"primary\": {\"light\": \"#7986cb\", \"main\": \"#3f51b5\", \"dark\": \"#303f9f\", \"contrastText\": \"#fff\"},\r\n        \"secondary\": {\"light\": \"#ff4081\", \"main\": \"#f50057\", \"dark\": \"#c51162\", \"contrastText\": \"#fff\"},\r\n        \"error\": {\"light\": \"#e57373\", \"main\": \"#f44336\", \"dark\": \"#d32f2f\", \"contrastText\": \"#fff\"},\r\n        \"text\": {\r\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\r\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\r\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\r\n            \"hint\": \"rgba(0, 0, 0, 0.38)\",\r\n        }\r\n    },\r\n    typography: {\r\n        fontSize: 20,\r\n        fontWeight: 900,\r\n    },\r\n};\r\n\r\n\r\nconst theme = createMuiTheme(customTheme);\r\n\r\nexport default theme;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport SideNav from '../components/SideNav';\r\nimport Main from '../components/Main';\r\nimport theme from '../theme';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {ThemeProvider} from '@material-ui/styles';\r\nimport loadData from \"../services/loadData\";\r\nimport {connect} from \"react-redux\";\r\nimport {Router} from \"react-router\";\r\nimport {createBrowserHistory} from 'history'\r\nimport 'typeface-roboto';\r\n\r\n\r\nconst browserHistory = createBrowserHistory();\r\nconst url = 'http://localhost:3000/navigation';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n        };\r\n        this.loadDataAction = props.loadDataAction;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDataAction(url);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.props !== nextProps) {\r\n            return true;\r\n        }\r\n        return this.state !== nextState;\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            navigation\r\n        } = this.props;\r\n        return (\r\n            <Router history={browserHistory}>\r\n                <ThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <div className='head-container'>\r\n                        <Header className='header-container'/>\r\n                        <div className='content-container'>\r\n                            <SideNav className='sidenav-container'\r\n                                     navigation={navigation}/>\r\n                            <Main className='main-container'/>\r\n                        </div>\r\n                    </div>\r\n                </ThemeProvider>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadDataAction: anyUrl => dispatch(loadData(anyUrl, 'LOAD_DATA_NAVIGATION_COMPLETE'))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    navigation: state.navigation,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const descriptorNewClient = {\r\n    \"ID\": '',\r\n    \"CreateDate\": '',\r\n    \"FirstName\": '',\r\n    \"LastName\": '',\r\n    \"CityBirth\": '',\r\n    \"StateBirth\": '',\r\n    \"ServiceNumber\": '',\r\n    \"Branch\": '',\r\n    \"Rank\": '',\r\n    \"Discharge\": '',\r\n    \"Comments\": ''\r\n};\r\n\r\nconst InitialState = {\r\n    auth: null,\r\n    selectClient: {\r\n        selectClientID: null,\r\n        selectClientData: null,\r\n    },\r\n    edit: false,\r\n    backup: null,\r\n    navigation: null,\r\n    clientForm: null,\r\n    clientData: null,\r\n    addNewClient: false,\r\n    descriptor: descriptorNewClient,\r\n};\r\n\r\nexport default function rootReducer(state = InitialState, action) {\r\n    switch (action.type) {\r\n        case 'LOAD_DATA_NAVIGATION_COMPLETE':\r\n            return {...state, navigation: action.payload};\r\n        case 'LOAD_DATA_CLIENT_FORM_COMPLETE':\r\n            return {...state, clientForm: action.payload};\r\n        case 'LOAD_CLIENT_DATA_COMPLETE':\r\n            return {...state, clientData: action.payload};\r\n        case 'SELECT_CLIENT':\r\n            const selectClientID = action.payload\r\n                ? action.payload.ID\r\n                : null;\r\n            return {\r\n                ...state, selectClient: {\r\n                    ...state.selectClient,\r\n                    selectClientID: selectClientID,\r\n                    selectClientData: action.payload\r\n                }\r\n            };\r\n        case 'ADD_NEW_CLIENT':\r\n            let newId = state.clientData.reduce((acc, curr) => {\r\n                acc = Number(acc.ID.slice(2)) > Number(curr.ID.slice(2))\r\n                    ? acc\r\n                    : curr;\r\n                return acc\r\n            });\r\n            newId = 'AC' + (Number(newId.ID.slice(2)) + 1).toString();\r\n\r\n            return {\r\n                ...state, addNewClient: true, selectClient: {\r\n                    ...state.selectClient,\r\n                    selectClientID: newId,\r\n                    selectClientData: {...state.descriptor, ID: newId}\r\n                }\r\n            };\r\n        case 'EDIT_SELECTED_CLIENT':\r\n            return {...state, backup: state.clientData, edit: true};\r\n        case 'EDITING_SELECTED_CLIENT':\r\n            return {\r\n                ...state, selectClient: {\r\n                    ...state.selectClient,\r\n                    selectClientData: action.payload\r\n                }\r\n            };\r\n        case 'CANCEL_EDIT_CLIENT':\r\n            return {\r\n                ...state, selectClient: {\r\n                    ...state.selectClient,\r\n                    selectClientID: null,\r\n                    selectClientData: null\r\n                }, addNewClient: false, clientData: state.backup, backup: null, edit: false\r\n            };\r\n        case 'SAVE_COMPLETE_CLIENT':\r\n            let newClientData = state.clientData.map(client => {\r\n                if (client.ID === state.selectClient.selectClientData.ID) return state.selectClient.selectClientData;\r\n                return client\r\n            });\r\n\r\n            if (newClientData.filter(client => client.ID === state.selectClient.selectClientData.ID).length < 1) {\r\n\r\n                newClientData.push(state.selectClient.selectClientData)\r\n            }\r\n\r\n            return {\r\n                ...state, selectClient: {\r\n                    ...state.selectClient,\r\n                    selectClientID: null,\r\n                    selectClientData: null\r\n                }, addNewClient: false, clientData: newClientData, backup: null, edit: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from './reducers/index';\r\nimport 'typeface-roboto';\r\n\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger());\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export default function loadData(url, action) {\r\n    return (dispatch) => {\r\n        fetch(url)\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    console.warn(`Looks like there was a problem. Status Code: ${\r\n                        response.status}`);\r\n                    return;\r\n                }\r\n                response.json().then((data) => {\r\n                    dispatch({type: action, payload: data});\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.warn('Fetch Error :-S', err);\r\n            });\r\n    };\r\n}"],"sourceRoot":""}